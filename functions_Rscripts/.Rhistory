#generates single patch distributions
png(file = paste0(dir, "single_patch_distribution", freq[i], ".png") ,
width=512, height=512)
start_row <- floor(runif(1, 20, 320))
start_col <- floor(runif(1, 20, 320))
m <- all_orange
for(k in start_row:(start_row + single[i])) {
for(j in start_col:(start_col + single[i])) {
m[k, j] <- 1
}
}
image(1:(nrow(m)), 1:ncol(m), m, col = colors, xaxt = "n", yaxt = "n", xlab = "", ylab = "")
dev.off()
#generates multiple patch distributions
png(file = paste0(dir, "clustered_distribution", freq[i], ".png") ,
width=512, height=512)
m <- all_orange
start_row <- floor(runif(1, 20, 80))
start_col <- floor(runif(1, 20, 220))
for(k in start_row:(start_row + five[i])) {
for(j in start_col:(start_col + five[i])) {
m[k, j] <- 1
}
}
start_row <- floor(runif(1, 20, 80))
start_col <- floor(runif(1, 320, 420))
for(k in start_row:(start_row + five[i])) {
for(j in start_col:(start_col + five[i])) {
m[k, j] <- 1
}
}
start_row <- floor(runif(1, 180, 210))
start_col <- floor(runif(1, 50, 190))
for(k in start_row:(start_row + five[i])) {
for(j in start_col:(start_col + five[i])) {
m[k, j] <- 1
}
}
start_row <- floor(runif(1, 180, 210))
start_col <- floor(runif(1, 270, 400))
for(k in start_row:(start_row + five[i])) {
for(j in start_col:(start_col + five[i])) {
m[k, j] <- 1
}
}
start_row <- floor(runif(1, 350, 380))
start_col <- floor(runif(1, 0, 400))
for(k in start_row:(start_row + five[i])) {
for(j in start_col:(start_col + five[i])) {
m[k, j] <- 1
}
}
image(1:(nrow(m)), 1:ncol(m), m, col = colors, xaxt = "n", yaxt = "n", xlab = "", ylab = "")
dev.off()
}
freq <- c(.1, .05, .04, .03, .02, .01)
single <- c(162, 114, 102, 89, 72, 51.2)
five <- c(72, 51, 46, 40, 32, 23)
all_orange <- matrix(sample(2, 262144, replace = TRUE, prob = c(0, 1)), nrow = 512)
colors <- c("blue", "orange")
dir <- "C:/Users/nataliezhu/Desktop/images/"
for(i in 1:length(freq)) {
#generates random distributions
png(file = paste0(dir, "random_distribution", freq[i], ".png") ,
width=512, height=512)
m <- matrix(sample(2, 262144, replace = TRUE, prob = c(freq[i], 1 - freq[i])), ncol = 512)
image(1:(nrow(m)), 1:ncol(m), m, col = colors, xaxt = "n", yaxt = "n", xlab = "", ylab = "")
dev.off()
#generates single patch distributions
png(file = paste0(dir, "single_patch_distribution", freq[i], ".png") ,
width=512, height=512)
start_row <- floor(runif(1, 20, 320))
start_col <- floor(runif(1, 20, 320))
m <- all_orange
for(k in start_row:(start_row + single[i])) {
for(j in start_col:(start_col + single[i])) {
m[k, j] <- 1
}
}
image(1:(nrow(m)), 1:ncol(m), m, col = colors, xaxt = "n", yaxt = "n", xlab = "", ylab = "")
dev.off()
#generates multiple patch distributions
png(file = paste0(dir, "clustered_distribution", freq[i], ".png") ,
width=512, height=512)
m <- all_orange
start_row <- floor(runif(1, 20, 80))
start_col <- floor(runif(1, 20, 220))
for(k in start_row:(start_row + five[i])) {
for(j in start_col:(start_col + five[i])) {
m[k, j] <- 1
}
}
start_row <- floor(runif(1, 20, 80))
start_col <- floor(runif(1, 320, 420))
for(k in start_row:(start_row + five[i])) {
for(j in start_col:(start_col + five[i])) {
m[k, j] <- 1
}
}
start_row <- floor(runif(1, 180, 210))
start_col <- floor(runif(1, 50, 190))
for(k in start_row:(start_row + five[i])) {
for(j in start_col:(start_col + five[i])) {
m[k, j] <- 1
}
}
start_row <- floor(runif(1, 180, 210))
start_col <- floor(runif(1, 270, 400))
for(k in start_row:(start_row + five[i])) {
for(j in start_col:(start_col + five[i])) {
m[k, j] <- 1
}
}
start_row <- floor(runif(1, 350, 380))
start_col <- floor(runif(1, 0, 400))
for(k in start_row:(start_row + five[i])) {
for(j in start_col:(start_col + five[i])) {
m[k, j] <- 1
}
}
image(1:(nrow(m)), 1:ncol(m), m, col = colors, xaxt = "n", yaxt = "n", xlab = "", ylab = "")
dev.off()
}
freq <- c(.1, .05, .04, .03, .02, .01)
single <- c(162, 114, 102, 89, 72, 51.2)
five <- c(72, 51, 46, 40, 32, 23)
all_orange <- matrix(sample(2, 262144, replace = TRUE, prob = c(0, 1)), nrow = 512)
colors <- c("blue", "orange")
dir <- "/Users/nataliezhu/Desktop/images"
for(i in 1:length(freq)) {
#generates random distributions
png(file = paste0(dir, "random_distribution", freq[i], ".png") ,
width=512, height=512)
m <- matrix(sample(2, 262144, replace = TRUE, prob = c(freq[i], 1 - freq[i])), ncol = 512)
image(1:(nrow(m)), 1:ncol(m), m, col = colors, xaxt = "n", yaxt = "n", xlab = "", ylab = "")
dev.off()
#generates single patch distributions
png(file = paste0(dir, "single_patch_distribution", freq[i], ".png") ,
width=512, height=512)
start_row <- floor(runif(1, 20, 320))
start_col <- floor(runif(1, 20, 320))
m <- all_orange
for(k in start_row:(start_row + single[i])) {
for(j in start_col:(start_col + single[i])) {
m[k, j] <- 1
}
}
image(1:(nrow(m)), 1:ncol(m), m, col = colors, xaxt = "n", yaxt = "n", xlab = "", ylab = "")
dev.off()
#generates multiple patch distributions
png(file = paste0(dir, "clustered_distribution", freq[i], ".png") ,
width=512, height=512)
m <- all_orange
start_row <- floor(runif(1, 20, 80))
start_col <- floor(runif(1, 20, 220))
for(k in start_row:(start_row + five[i])) {
for(j in start_col:(start_col + five[i])) {
m[k, j] <- 1
}
}
start_row <- floor(runif(1, 20, 80))
start_col <- floor(runif(1, 320, 420))
for(k in start_row:(start_row + five[i])) {
for(j in start_col:(start_col + five[i])) {
m[k, j] <- 1
}
}
start_row <- floor(runif(1, 180, 210))
start_col <- floor(runif(1, 50, 190))
for(k in start_row:(start_row + five[i])) {
for(j in start_col:(start_col + five[i])) {
m[k, j] <- 1
}
}
start_row <- floor(runif(1, 180, 210))
start_col <- floor(runif(1, 270, 400))
for(k in start_row:(start_row + five[i])) {
for(j in start_col:(start_col + five[i])) {
m[k, j] <- 1
}
}
start_row <- floor(runif(1, 350, 380))
start_col <- floor(runif(1, 0, 400))
for(k in start_row:(start_row + five[i])) {
for(j in start_col:(start_col + five[i])) {
m[k, j] <- 1
}
}
image(1:(nrow(m)), 1:ncol(m), m, col = colors, xaxt = "n", yaxt = "n", xlab = "", ylab = "")
dev.off()
}
source("generate_randompatches.R")
setwd("~/Desktop/R!")
source("generate_randompatches.R")
generate_randompatches(0.2,512,512,5)
ource("generate_randompatches.R")
source("generate_randompatches.R")
generate_randompatches(0.2,512,512,5)
source("generate_singlepatch.R")
generate_singlepatch(0.2, 512, 512)
generate_randompatches(c(0,1,0.2,0.3),512,512,5)
source("generate_singlepatch.R")
generate_singlepatch(0.2, 512, 512)
source("generate_singlepatch.R")
generate_singlepatch(0.2, 512, 512)
source("generate_signlepatch.R")
source("generate_singlepatch.R")
generate_singlepatch(c(0.1,0.2,0.3),512,512)
source("generate_randompatches.R")
generate_randompatches(c(0.1,0.2),512,512)
source("generate_randomdis.R")
generate_randomdis(0.2, 512, 512)
source("generate_singlepatch.R")
generate_randomdis(0.2, 512,512)
generate_singlepatch(0.2,512,512)
sqrt(0.1*512*512)
source("generate_singlepatch.R")
generate_singlepatch(0.2,512,512)
generate_singlepatch(0.2,512,1000)
generate_singlepatch(c(0.1,0.3),512,1000)
soruce("generate_randompatches.R")
source("generate_randompatches.R")
generate_randompatches(0.2,512,512,5)
source("generate_randompatches.R")
generate_randompatches(0.12, 512,512,5)
source("generate_randompatches.R")
generate_randompatches(0.12,512,512,5)
source("generate_randompatches.R")
generate_randompatches(0.12,512,512,5)
height*width
all_orange <- matrix(sample(2, height*width, replace = TRUE, prob = c(0, 1)), nrow = width)
colors <- c("blue", "orange")
dir <- "/Users/nataliezhu/Desktop/R!"
(height*width) = total_area
total_area * freq = patch_total_area
patch_total_area/n_patches = patch_area
sqrt(patch_area) = number
exists("total_area")
height = 512
width = 512
all_orange <- matrix(sample(2, height*width, replace = TRUE, prob = c(0, 1)), nrow = width)
colors <- c("blue", "orange")
dir <- "/Users/nataliezhu/Desktop/R!"
(height*width) = total_area
total_area * freq = patch_total_area
patch_total_area/n_patches = patch_area
sqrt(patch_area) = number
height*width
total_area
total_area<-height*width
total_area
height*width<-total_area
source("generate_randompatches.R")
generate_randompatches.R(0.1, 512,512,5)
generate_randompatches(0.1,512,512,5)
source("generate_randompatches.R")
generate_randompatches(0.1,512,512,5)
source("generate_randompatches.R")
generate_randompatches(0.1,512,512,5)
source("generate_randompatches.R")
generate_randompatches(0.1, 512, 512, 2)
source("generate_randompatches.R")
generate_randompatches(0.1, 512, 512, 3)
source("generate_randompatches.R")
source("generate_randompatches.R")
source("generate_randompatches.R")
generate_randompatches(0.2,512,512,2)
generate_randompatches(0.1,512,512,2)
generate_randompatches(0.2,512,512,1)
generate_randompatches(0.01,512,512,2)
source("generate_singlepatch.R")
generate_singlepatch("0.1,300,900")
generate_singlepatch(0.1,512,512)
generate_singlepatch(0.1,300,900)
install.packages("rentrez")
library("rentrez")
library("XML")
entrez_search(db="nuccore", "Gastropoda[Organism] and COI[Gene]", retmax=200)
entrez_search(db="nucleotide", "Labridae[Organism] and cytb[Gene]")
entrez_search(db="nucleotide", term="labridae[Organism] AND cytb[Gene]")
r_search <- entrez_search(db="nucleotide", term="labridae[Organism] AND cytb[Gene]")
r_search $count
r_count <- rsearch$count
r_count <- r_search$count
View(generate_randomdis)
r_search <- entrez_search(db="nuccore", term="labridae[Organism] AND cytb[Gene]")
r_search
r_count <- r_search$count
install.packages("rentrez")
library("rentrez")
r_search <- entrez_search(db="nuccore", term="labridae[Organism] AND cytb[Gene]", )
r_search
r_id <- r_search$id
r_id
r_id <- r_search$ids
r_id
r_search <- entrez_search(db="nuccore", term="labridae[Organism] AND cytb[Gene]", )
r_search
r_id <- r_search$ids
r_id
upload <- entrez_post(db="nuccore", id=r_id)
first <- entrez_fetch(db="nuccore", rettype="asn", web_history=upload,
retmax=r_count)
second <- entrez_fetch(db="nuccore", file_format="asn", web_history=upload,
retstart=r_count, retmax=r_count)
r_count <- r_search$count
r_search <- entrez_search(db="nuccore", term="labridae[Organism] AND cytb[Gene]", )
r_search
r_id <- r_search$ids
r_id
upload <- entrez_post(db="nuccore", id=r_id)
first <- entrez_fetch(db="nuccore", rettype=NULL, web_history=upload,
retmax=r_count)
second <- entrez_fetch(db="nuccore", file_format=NULL, web_history=upload,
retstart=r_count, retmax=r_count)
r_count <- r_search$count
r_search <- entrez_search(db="nuccore", term="labridae[Organism] AND cytb[Gene]", retmax = r_search$count)
r_search
r_search <- entrez_search(db="nuccore", term="labridae[Organism] AND cytb[Gene]", retmax = r_search$count)
r_search
r_id <- r_search$ids
r_count <- r_search$count
upload <- entrez_post(db="nuccore", id=r_id)
first <- entrez_fetch(db="nuccore", rettype=NULL, web_history=upload,
retmax=r_count)
second <- entrez_fetch(db="nuccore", file_format=NULL, web_history=upload,
retstart=r_count, retmax=r_count)
r_search <- entrez_search(db="nuccore", term="labridae[Organism] AND cytb[Gene]", retmax = r_search$count)
r_search
r_id <- r_search$ids
r_count <- r_search$count
upload <- entrez_post(db="nuccore", id=r_id)
first <- entrez_fetch(db="nuccore", rettype=NULL, web_history=upload,
retmax=r_count)
second <- entrez_fetch(db="nuccore", rettype=NULL, file_format=NULL, web_history=upload,
retstart=r_count, retmax=r_count)
r_id <- r_search$ids
r_count <- r_search$count
upload <- entrez_post(db="nuccore", id=r_id)
first <- entrez_fetch(db="nuccore", rettype=NULL, web_history=upload,
retmax=320)
second <- entrez_fetch(db="nuccore", rettype=NULL, file_format=NULL, web_history=upload,
retstart=320, retmax=320)
r_search
r_id <- r_search$ids
r_count <- r_search$count
upload <- entrez_post(db="nuccore", id=r_id)
first <- entrez_fetch(db="nuccore", rettype=NULL, web_history=upload,
retmax=308)
second <- entrez_fetch(db="nuccore", rettype=NULL, file_format=NULL, web_history=upload,
retstart=308, retmax=308)
source("generate_randomdis")
source("generate_randomdis.R")
generate_randomdis(c(0.1,0.4,0.2),300,400)
source("generate_singlepatch.R")
generate_singlepatch(c(0.1,0,3,0,4),512,512)
generate_singlepatch(c(0.1,0.3,0.4),512,512)
source("generate_randompatches.R")
generate_randompatches(0.1,512,512,3)
generate_randompatches(0.1,512,512,2)
generate_randompatches(0.01,512,512,2)
#make this into a function
#function will take a frequency argument
#function will take a height and width arguement
#generate_images(freq, height = 512, width = 512)
#change the one patch generation to be center
freq <- c(.1, .05, .04, .03, .02, .01)
single <- c(162, 114, 102, 89, 72, 51.2)
five <- c(72, 51, 46, 40, 32, 23)
all_orange <- matrix(sample(2, 262144, replace = TRUE, prob = c(0, 1)), nrow = 512)
colors <- c("blue", "orange")
dir <- "C:/Users/Kevin Wang/OneDrive - UCLA IT Services/alfarolab (1)/charisma/"
for(i in 1:length(freq)) {
#generates random distributions
png(file = paste0(dir, "random_distribution", freq[i], ".png") ,
width=512, height=512)
m <- matrix(sample(2, 262144, replace = TRUE, prob = c(freq[i], 1 - freq[i])), ncol = 512)
image(1:(nrow(m)), 1:ncol(m), m, col = colors, xaxt = "n", yaxt = "n", xlab = "", ylab = "")
dev.off()
#generates single patch distributions
png(file = paste0(dir, "single_patch_distribution", freq[i], ".png") ,
width = 512, height = 512)
start_row
start_col
m <- all_orange
for(k in start_row:(start_row + single[i])) {
for(j in start_col:(start_col + single[i])) {
m[k, j] <- 1
}
}
image(1:(nrow(m)), 1:ncol(m), m, col = colors, xaxt = "n", yaxt = "n", xlab = "", ylab = "")
dev.off()
#generates multiple patch distributions
png(file = paste0(dir, "clustered_distribution", freq[i], ".png") ,
width=512, height=512)
m <- all_orange
start_row <- floor(runif(1, 20, 80))
start_col <- floor(runif(1, 20, 220))
for(k in start_row:(start_row + five[i])) {
for(j in start_col:(start_col + five[i])) {
m[k, j] <- 1
}
}
start_row <- floor(runif(1, 20, 80))
start_col <- floor(runif(1, 320, 420))
for(k in start_row:(start_row + five[i])) {
for(j in start_col:(start_col + five[i])) {
m[k, j] <- 1
}
}
start_row <- floor(runif(1, 180, 210))
start_col <- floor(runif(1, 50, 190))
for(k in start_row:(start_row + five[i])) {
for(j in start_col:(start_col + five[i])) {
m[k, j] <- 1
}
}
start_row <- floor(runif(1, 180, 210))
start_col <- floor(runif(1, 270, 400))
for(k in start_row:(start_row + five[i])) {
for(j in start_col:(start_col + five[i])) {
m[k, j] <- 1
}
}
start_row <- floor(runif(1, 350, 380))
start_col <- floor(runif(1, 0, 400))
for(k in start_row:(start_row + five[i])) {
for(j in start_col:(start_col + five[i])) {
m[k, j] <- 1
}
}
image(1:(nrow(m)), 1:ncol(m), m, col = colors, xaxt = "n", yaxt = "n", xlab = "", ylab = "")
dev.off()
}
#make this into a function
#function will take a frequency argument
#function will take a height and width arguement
#generate_images(freq, height = 512, width = 512)
#change the one patch generation to be center
freq <- c(.1, .05, .04, .03, .02, .01)
single <- c(162, 114, 102, 89, 72, 51.2)
five <- c(72, 51, 46, 40, 32, 23)
all_orange <- matrix(sample(2, 262144, replace = TRUE, prob = c(0, 1)), nrow = 512)
colors <- c("blue", "orange")
dir <- "/Users/nataliezhu/Desktop/R!"
for(i in 1:length(freq)) {
#generates random distributions
png(file = paste0(dir, "random_distribution", freq[i], ".png") ,
width=512, height=512)
m <- matrix(sample(2, 262144, replace = TRUE, prob = c(freq[i], 1 - freq[i])), ncol = 512)
image(1:(nrow(m)), 1:ncol(m), m, col = colors, xaxt = "n", yaxt = "n", xlab = "", ylab = "")
dev.off()
#generates single patch distributions
png(file = paste0(dir, "single_patch_distribution", freq[i], ".png") ,
width = 512, height = 512)
start_row
start_col
m <- all_orange
for(k in start_row:(start_row + single[i])) {
for(j in start_col:(start_col + single[i])) {
m[k, j] <- 1
}
}
image(1:(nrow(m)), 1:ncol(m), m, col = colors, xaxt = "n", yaxt = "n", xlab = "", ylab = "")
dev.off()
#generates multiple patch distributions
png(file = paste0(dir, "clustered_distribution", freq[i], ".png") ,
width=512, height=512)
m <- all_orange
start_row <- floor(runif(1, 20, 80))
start_col <- floor(runif(1, 20, 220))
for(k in start_row:(start_row + five[i])) {
for(j in start_col:(start_col + five[i])) {
m[k, j] <- 1
}
}
start_row <- floor(runif(1, 20, 80))
start_col <- floor(runif(1, 320, 420))
for(k in start_row:(start_row + five[i])) {
for(j in start_col:(start_col + five[i])) {
m[k, j] <- 1
}
}
start_row <- floor(runif(1, 180, 210))
start_col <- floor(runif(1, 50, 190))
for(k in start_row:(start_row + five[i])) {
for(j in start_col:(start_col + five[i])) {
m[k, j] <- 1
}
}
start_row <- floor(runif(1, 180, 210))
start_col <- floor(runif(1, 270, 400))
for(k in start_row:(start_row + five[i])) {
for(j in start_col:(start_col + five[i])) {
m[k, j] <- 1
}
}
start_row <- floor(runif(1, 350, 380))
start_col <- floor(runif(1, 0, 400))
for(k in start_row:(start_row + five[i])) {
for(j in start_col:(start_col + five[i])) {
m[k, j] <- 1
}
}
image(1:(nrow(m)), 1:ncol(m), m, col = colors, xaxt = "n", yaxt = "n", xlab = "", ylab = "")
dev.off()
}
source("generate_randomdis.R")
generate_randomdis(c(0.1,0.2,0.3),300,600)
generate_singlepatch(c(0.1,0.2),300,600)
source("generate_singlepatch.R")
generate_singlepatch(0.1,512,512)
